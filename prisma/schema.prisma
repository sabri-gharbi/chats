// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Cat {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    birthDate   DateTime
    breed       String
    gender      String
    city        String
    description String
    photo       String

    adoptiuonStatusId String
    adoptionStatus    AdoptionStatus @relation(fields: [adoptiuonStatusId], references: [id])

    catLoversIds String[] @db.ObjectId
    catLovers    User[]   @relation(fields: [catLoversIds], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    adoptionDemands AdoptionDemand[]
}

model User {
    id    String @id @default(auto()) @map("_id") @db.ObjectId
    name  String
    email String @unique()
    role  String

    favouriteCatsIds String[] @db.ObjectId
    favouriteCats    Cat[]    @relation(fields: [favouriteCatsIds], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    adoptionDemands AdoptionDemand[]
}

model AdoptionDemand {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    userId String @db.ObjectId
    user   User   @relation(fields: [userId], references: [id])

    catId String @db.ObjectId
    cat   Cat    @relation(fields: [userId], references: [id])

    createdAt DateTime @default(now())

    @@unique([catId, userId])
}

model AdoptionStatus {
    id          String  @id @map("_id")
    isAdopted   Boolean
    isPending   Boolean
    isAdoptable Boolean

    cats Cat[]
}
